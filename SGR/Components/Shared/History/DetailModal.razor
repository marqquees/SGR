@using SGR.Helper
@using SGR.Models
@using SGR.Service

@inject ModalManager ModalManager

<div class="modal fade show" style="display: block;" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="fw-bold modal-title">Detalhes #@Item.Id</h5>
                <button type="button" class="btn-close" @onclick="OnClose" aria-label="Fechar"></button>
            </div>
            <div class="modal-body" id="printableArea">

                <!-- Componente de Ciclo de Vida -->
                <Lifecycle Item="@Item"
                           IsEditing="@IsEditing"
                           OnStateChanged="HandleStateChanged"
                           @ref="_lifecycle" />

                <hr class="my-3"/>

                @if (!IsEditing)
                {
                    <div class="row">
                        <div class="col mb-2">
                            <label class="form-label fw-bold">Data do Registro</label>
                            <p>@Item.DateRegister</p>
                        </div>
                        <div class="col mb-2">
                            <label class="form-label fw-bold">Estado</label>
                            <p>
                                <span class="badge @HistoryUi.GetStateBadgeClass(Item.State)">
                                    @Item.State
                                </span>
                            </p>
                        </div>
                    </div>
                }
                else
                {
                    <div class="row">
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Data do Registro</label>
                            <input type="date" class="form-control" value="@Item.DateRegister.ToString("yyyy-MM-dd")" @onchange="UpdateDate" />
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Estado</label>
                            <p class="form-control-plaintext">
                                <span class="badge @HistoryUi.GetStateBadgeClass(Item.State)">
                                    @Item.State
                                </span>
                            </p>
                        </div>
                    </div>
                }

                @if (!IsEditing)
                {
                    <h6 class="fw-bold mt-3 mb-2 border-bottom pb-2">Detalhe do Equipamento</h6>
                    <div class="row">
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Cliente</label>
                            <p>@Item.Customer</p>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Utilizador</label>
                            <p>@Item.User</p>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Categoria</label>
                            <p>@Item.Category</p>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Marca</label>
                            <p>@Item.Brand</p>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Modelo</label>
                            <p>@Item.Model</p>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">N�mero de S�rie</label>
                            <p>@Item.SerialNumber</p>
                        </div>
                    </div>

                    <h6 class="fw-bold mt-3 mb-2 border-bottom pb-2">Especifica��es T�cnicas</h6>
                    <div class="row">
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Processador</label>
                            <p>@Item.Processor</p>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Mem�ria RAM</label>
                            <p>@Item.MemoryRAM</p>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Armazenamento</label>
                            <p>@Item.Storage</p>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Sistema Operativo</label>
                            <p>@Item.OperatingSystem</p>
                        </div>
                    </div>

                    <h6 class="fw-bold mt-3 mb-2 border-bottom pb-2">Manuten��o e Controlo</h6>
                    <div class="row">
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Observa��o</label>
                            <p>@Item.Note</p>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Respons�vel</label>
                            <p>@Item.Responsible</p>
                        </div>
                    </div>
                }
                else
                {
                    <h6 class="fw-bold mt-3 mb-2 border-bottom pb-2">Detalhes do Equipamento</h6>
                    <div class="row">
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Cliente</label>
                            <input type="text" class="form-control" @bind="Item.Customer"></input>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Utilizador</label>
                            <input type="text" class="form-control" @bind="Item.User"></input>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Categoria</label>
                            <input type="text" class="form-control" @bind="Item.Category"></input>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Marca</label>
                            <input type="text" class="form-control" @bind="Item.Brand"></input>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Modelo</label>
                            <input type="text" class="form-control" @bind="Item.Model"></input>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">N�mero de S�rie</label>
                            <input type="text" class="form-control" @bind="Item.SerialNumber"></input>
                        </div>
                    </div>

                    <h6 class="fw-bold mt-3 mb-2 border-bottom pb-2">Especifica��es T�cnicas</h6>
                    <div class="row">
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Processador</label>
                            <input type="text" class="form-control" @bind="Item.Processor"></input>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Mem�ria RAM</label>
                            <input type="text" class="form-control" @bind="Item.MemoryRAM"></input>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Armazenamento</label>
                            <input type="text" class="form-control" @bind="Item.Storage"></input>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Sistema Operativo</label>
                            <input type="text" class="form-control" @bind="Item.OperatingSystem"></input>
                        </div>
                    </div>

                    <h6 class="fw-bold mt-3 mb-2 border-bottom pb-2">Manuten��o e Controlo</h6>
                    <div class="row">
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Observa��o</label>
                            <textarea class="form-control" rows="3" @bind="Item.Note"></textarea>
                        </div>
                        <div class="col mb-3">
                            <label class="form-label fw-bold">Respons�vel</label>
                            <input type="text" class="form-control" @bind="Item.Responsible"></input>
                        </div>
                    </div>
                }
            </div>
            @if (!IsEditing)
            {
                <div class="modal-footer">
                    <div class="d-flex w-100">
                        <div>
                            <button type="button" class="btn btn-primary" @onclick="() => OnExportPdf.InvokeAsync(Item)">
                                Exportar (PDF)
                            </button>
                        </div>
                        <div class="ms-auto">
                            <button type="button" class="btn btn-danger me-2" @onclick="() => OnDelete.InvokeAsync(Item)">
                                Eliminar
                            </button>
                            <button type="button" class="btn btn-primary me-2" @onclick="OnEdit">
                                Editar
                                </button>
                            <button type="button" class="btn btn-secondary" @onclick="OnClose">
                                Fechar
                            </button>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="ModalManager.CancelEditing">
                        Cancelar
                    </button>
                    <button type="button" class="btn btn-danger me-2" @onclick="() => OnDelete.InvokeAsync(Item)">
                        Eliminar
                    </button>
                    <button type="button" class="btn btn-success" @onclick="HandleSave" disabled="@(!_isStateTransitionValid)">
                        Salvar
                    </button>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public Equipment Item { get; set; } = null!;
    [Parameter] public bool IsEditing { get; set; }
    [Parameter] public EventCallback<Equipment> OnDelete { get; set; }
    [Parameter] public EventCallback<Equipment> OnSave { get; set; }
    [Parameter] public EventCallback<Equipment> OnExportPdf { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback OnEdit { get; set; }

    private string _originalState = string.Empty;
    private bool _isStateTransitionValid = true;
    private Lifecycle? _lifecycle;

    /// <summary>
    /// M�todo executado na inicializa��o do componente.
    /// </summary>
    protected override void OnInitialized()
    {
        _originalState = Item.State;
        _isStateTransitionValid = true;
    }

    /// <summary>
    /// M�todo executado quando os par�metros do componente s�o atualizados.
    /// </summary>
    protected override void OnParametersSet()
    {
        // Atualiza o estado original quando n�o est� em modo de edi��o.
        if (!IsEditing)
        {
            _originalState = Item.State;
            _isStateTransitionValid = true;
        }
    }

    /// <summary>
    /// Atualiza a data de registro quando o valor do campo de data � alterado.
    /// </summary>
    /// <param name="e">O evento que cont�m o novo valor da data.</param>
    private void UpdateDate(ChangeEventArgs e)
    {
        if (e.Value is string dateString)
        {
            if (DateOnly.TryParse(dateString, out DateOnly date))
                Item.DateRegister = date;
        }
    }

    /// <summary>
    /// Manipula mudança de estado vindas do componente de ciclo de vida.
    /// </summary>
    /// <param name="newState">Novo estado selecionado.</param>
    private Task HandleStateChanged(string newState)
    {
        _isStateTransitionValid = EquipmentLifecycle.IsValidTransition(_originalState, newState);
        StateHasChanged();
        return Task.CompletedTask;
    }

    /// <summary>
    /// Manipula o salvamento com valida��o de estado.
    /// </summary>
    private async Task HandleSave()
    {
        // Verifica se o estado � v�lido atrav�s do componente de ciclo de vida.
        if (_lifecycle?.IsCurrentStateValid() == true && _isStateTransitionValid)
            await OnSave.InvokeAsync(Item);
    }
}